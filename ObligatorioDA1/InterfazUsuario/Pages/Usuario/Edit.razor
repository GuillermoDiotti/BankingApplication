@page "/Edit"
@using Dominio
@using InterfazUsuario.Data
@using Logica
@inject LogicaUsuario UserLogic
@inject SessionLogic SessionLogic
@inject LogicaEspacio LogicaEspacio

<div class="bg">
    <section class="form-container form-center">
    <h4>Ingrese sus nuevos campos</h4>
        <form @onsubmit="ActualizarUsuario">
            <div class="form-group">
                <label for="nombre">Nombre</label>
                <input type="text" class="form-control" id="nombre" @bind="_nombre" required/>
            </div>
            <div class="form-group">
                <label for="apellido">Apellido</label>
                <input type="text" class="form-control" id="apellido" @bind="_apellido" required/>
            </div>
            <div class="form-group">
                <label for="direccion">Direccion</label>
                <input type="text" class="form-control" id="direccion" @bind="_direccion"/>
            </div>
            <div class="form-group">
                <label for="password">Contraseña</label>
                <input type="password" class="form-control" id="password" @bind="_password" required/>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirme la contraseña</label>
                <input type="password" class="form-control" id="confirmPassword" @bind="_confirmPassword" required/>
            </div>
            <button type="submit" class="btn btn-primary">Actualizar</button>
        </form>
        
        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <p class="error-message" >
                @_errorMessage
            </p>
        }
        
        @if (!string.IsNullOrEmpty(_successMessage))
        {
            <p class="success-message">
                @_successMessage
            </p>
        }
        
        <p><NavLink href="/home" class="nav-span">Regresar al inicio</NavLink></p>
    </section>
</div>

@code {
    private Usuario? _usuario;
    
    private string? _nombre;
    private string? _apellido;
    private string? _direccion;
    private string? _password;
    private string? _confirmPassword;
    
    private string? _errorMessage;
    private string? _successMessage;
    
    protected override void OnInitialized()
    {
        _usuario = UserLogic.ConseguirUsuarioPorId(SessionLogic.UsuarioActivo.Id);
    }


    private void ActualizarUsuario()
    {
        try
        {
            if (_confirmPassword == _password)
            {
                Usuario updatedUser = new Usuario()
                {
                    Id = _usuario.Id,
                    Name = _nombre,
                    Mail = _usuario.Mail,
                    LastName = _apellido,
                    Address = _direccion,
                    Password = _password
                };
                UserLogic.Update(updatedUser);
                LimpiarCampos();
                _successMessage = "Usuario actualizado correctamente";
            }
            else
            {
                throw new LogicException("Las contraseñas no coinciden");
            }
        }
        catch (LogicException e)
        {
            _successMessage = "";
            _errorMessage = e.Message;
        }
        catch (DomainException e)
        {
            _successMessage = "";
            _errorMessage = e.Message;
        }
        
    }

    private void LimpiarCampos()
    {
        _nombre = _apellido = _direccion = _password = _confirmPassword = _errorMessage = "";
    }
    
}